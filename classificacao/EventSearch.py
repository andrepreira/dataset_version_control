
# coding=utf-8
import collections
import re


class EventSearcher(object):

    def __init__(self):
        self.events = collections.OrderedDict([
                       ('TORNAR SEM EFEITO', [r'(to.{1,2}ar\s*sem\s*efeito)']),
            ('CONTRATO TEMPORARIO', [r'extrato\s*de\s*contrato\stemporario', r'resolve.*?contrato\stemporario',
                                     '^\s*contrato servidor temporario']),
            ('SUBSTITUICAO', [r'(designar|nomear|convocar).{0,200}?(substituicao|substituir)',
                              r'autorizar a designacao.*impedimento',
                              r'admitir.*exercer.*impedimento',
                              r'substituir [oa]s? servidor'
                              ]),
            ('ABANDONO DE CARGO', [r'abandono\s*de\s*cargo.*?(demitir|demissao|exoner)']),
            ('CONVOCACAO', [r'convocar para posse', 
                            r'resolve.{0,20}?convocar os candidatos', 
                            r'convocar para entrega de documentacao os candidatos nomeados',
                            r'convocar para tomar posse',
                            r'r e s o l v e[\s\S]{0,50}[oa]s? candidat[oa]s? classificad[oa]s?']),
            ('NOMEACAO EM CARGO EFETIVO', [r'nome(ar|ia)[\s\S]{0,100}candidatos?\s*aprovados?',
                          r'nome(ar|ia)[\s\S]{0,50}carater efetivo',                          
                          r'nomear para os? cargos? publicos?',
                          r'nomeacao de candidatos para os cargos',
                          r'nomear na secretaria.{0,80}?para o cargo publico',
                          r'NOMEAR,? em carater efetivo,?']),
            ('NOMEACAO DE CARGO EM COMISSAO LISTA', [r'nomear.*? (exercerem|para o?s? exercicios?) d?os? cargos?.{3,7}comissao',
                                                     r'.omear os servidores abaixo relacionados no exercicio do cargo.{3,7}comissao',
                                                     r'.omear.*?exercicio.{0,8}carg.{3,8}comi']),
            ('NOMEACAO DE CARGO EM COMISSAO', [r'nomear.*?exercer o cargo.{3,7}comissao',
                                               r'nomear.*?(para o?|no).{4,18}cargo,?.{3,6}comissao',
                                               r'\snomear.{0,150}?cargo.{3,7}comissao',
                                               r'^.{0,5}(designar|mear).*?para o? exer.{7,20}co.{0,2}mi.{0,3}?s',
                                               r'autoriza.*?nomeac.*?comissao']),
            ('CESSAO', [r'(\sautorizar|prorrogar).{2,80}?\s+(cessao|cedencia)',
                        r'\sceder [oa]s? servidor']),
            ('EXONERACAO DE CARGO EM COMISSAO LISTA', [r'.xonera.*?dos cargos.{3,7}comissao']),
            ('EXONERACAO DE CARGO EM COMISSAO', [r'(exonera|dispensa).*?car\s*gos?.{1,15}co.{0,2}mi.{0,2}s']),
            ('EXONERACAO DE CARGO ELETIVO', [r'resolve.{0,20}exonerar.{0,20}cargo eletivo']),
            ('EXONERACAO DE CARGO EFETIVO', [r'resolve.{0,150}?exonera.*?servidor',
                                             r'resolve.{0,20}exonera.{0,100}do cargo',
                                            r'EXONERAR,? a pedido,? da?o? servidora? publica?o?']),
            ('APOSENTADORIA', [r'resolve.{1,20}?aposentar', 
                                   r'concede[\s\S]{0,50}aposentadoria (por tempo de contribuicao|compulsoria|por invalidez|voluntaria)',
                                   r'Conceder? o beneficio de aposentadoria',
                                   r'CONCEDER, o beneficio de aposentadoria',
                                   r'concessao do\\n?beneficio de aposentadoria',
                              ]),
            ('ADICIONAL DE INSALUBRIDADE OU PERICULOSIDADE', [r'adicional\s*(de)?\s*(periculosidade|insalubridade)']),
            ('ADICIONAL DE TEMPO DE SERVICO', [r'adicio\s*nal.{2,8}tempo.{4,6}servico']),
            ('ADICIONAL NOTURNO', [r'adicional\s*noturno']),
            ('AFASTAMENTO PARA ESTUDO OU MISSAO NO EXTERIOR', [r'afastamento\s*para\s*estudo\s*no\s*exterior']),
            ('AFASTAMENTO DO PAIS', [r'afastamento\s*do\s*pais']),
            ('AFASTAMENTO PARA QUALIFICACAO PROFISSIONAL', [r'conceder.{0,100}afastamento.{0,50} para qualificacao profissional']),
            ('AFASTAMENTO SEM ONUS', [r'(in)?deferir.{0,100}afastamento sem onus']),
            ('AFASTAMENTO COM ONUS', [r'(in)?deferir.{0,100}afastamento com onus']),
            ('AFASTAMENTO PREVENTIVO', [r'(evento.|determinar|ordenar)\s*o?\s*afastamento\s*preventi(v|n)o']),
            ('AJUDA DE CUSTO', [r'(faz\s*jus\s*a|conceder)\s*ajuda\s*de\s*custo']),
            ('PENSAO POR MORTE', [r'conceder pensao por morte', r'conceder pensao vitalicia', r'concessao do beneficio de pensao por morte']),
            ('ATO NULO', [r'(tor?nar\s*nulo[\s\S]{0,30}decreto|resolve\s*declarar\s*nulo)']),
            ('AVERBACAO DE TEMPO DE CONTRIBUICAO', [r'((r\s*e\s*s\s*o\s*l\s*v\s*e|deferido)[\s\S]{0,50}pedido\s*de\s*averbacao|averbe-se|averbar o tempo)',
                                                    r'conceder?[\s\S]{0,150}averbacao de tempo de contribuicao',
                                                    r'(deferi|conceder)[\s\S]{0,150}averbacao',
                                                    r'averbar.{2,30}?para fins de aposentadoria']),
            ('ALTERACAO JORNADA DE TRABALHO', [r'(r\s*e\s*s\s*o\s*l\s*v\s*e|decreta)[\s\S]{0,50}regime\s*de\s*trabalho',
                                     r'(in)?deferir.{0,50}?alteracao de jornada laboral',
                                     r'(in)?deferir.{0,50}mudanca de carga horaria',
                                     r'(in)?deferir reducao especial de jornada de trabalho', r'alteracao de jornada de trabalho', r'alteracao de carga horaria']),
            ('CASSACAO DE APOSENTADORIA', [r'r\s*e\s*s\s*o\s*l\s*v\s*e[\s\S]{0,50}cassar\s*a\s*aposentadoria']),
            ('CASSACAO DE DISPONIBILIDADE', [r'r\s*e\s*s\s*o\s*l\s*v\s*e[\s\S]{0,50}\scessar\s*a\s*disponibilidade']),
            ('CESSAR OS EFEITOS', [r'r\s*e\s*s\s*o\s*l\s*v\s*e[\s\S]{0,50}(tornar sem|cessar)[\s\S]{0,50}efeito']),
            ('DEMISSAO', [r'r\s*e\s*s\s*o\s*l\s*v\s*e[\s\S]{0,50}demitir']),
            ('DISPENSA', [r'dispensar.{0,150}cargo|cancelar[\s\S]{0,300}distrato|distrato\s*de\s*contrato']),
            ('DISPENSA DO TRABALHO', [r'conceder.{0,150}dispensa do trabalho']),
            ('DISPENSA FUNCAO GRATIFICADA', [r'dispensar.{0,150}funcao gratificada']),
            ('DESIGNACAO FUNCAO GRATIFICADA', [r'esignar.{0,150}funcao gratificada', 
                                            r'(designar|nomear).{0,120}? (para exercer a|na|para a) funcao',
                                            r'nomear\s*.{0,60}?para exercer o? cargo de']),
            ('PAGAMENTO GRATIFICACAO', [r'pagamento de gratificacao']),
            ('PAGAMENTO HORAS EXCEDENTES', [r'pagamento de horas excedentes']),
            ('DISPONIBILIDADE', [r'(colocar|prorrogar).{0,150}dispo(sicao|nibilidade)']),
            ('ENQUADRAMENTO', [r'ficam?[\s\S]{0,100}enquadrad(a|o|os)', r'.nquadrar.{0,150}cargo', r'enquadramento dos servidores', r'revisao d[eo] enquadramento']),
            ('ESTABILIDADE CONSTITUCIONAL', [r'resolve[\s\S]{0,150}(conceder\s*estabilidade|declarar[\s\S]{0,100}estavel)[\s\S]{0,250}art']),
            ('ESTABILIDADE FINANCEIRA', [r'resolve.{0,150}?estabilidade financeira']),
            ('LICENCA CAPACITACAO', [r'(in)?deferir.{0,50}licenca (para)? capacitacao']),
            ('ESCALA DE FERIAS', [r'(resolve|aprovar)[\s\S]{0,150}escala\s*de\s*ferias']),
            ('LICENCA A ADOTANTE', [r'(resolve|conceder)[\s\S]{0,150}licenca\s*a?\s*adotante']),
            ('LICENCA A PATERNIDADE', [r'(resolve|conceder)[\s\S]{0,180}licenca\s*paternidade']),
            ('LICENCA A GESTANTE', [r'resolve[\s\S]{0,50}licenca\s*a?\s*gestante',
                                    r'conceder?[\s\S]{0,190}lic.{5,9}mat.{1,5}nidade',
                                    r'licenca gestante', 'lic.{2,9}maternidade']),
            ('LICENCA PARA QUALIFICACAO PROFISSIONAL', [r'(resolve|conceder?)[\s\S]{0,150}licenca\s*para\s*qualificacao\s*profissional']),
            ('LICENCA PARA ATIVIDADE POLITICA', [r'resolve[\s\S]{0,300}(atividade\s*politica|mandato\s*eletivo)']),
            ('LICENCA PARA DESEMPENHO DE MANDATO CLASSISTA', [r'resolve[\s\S]{0,250}mandato\s*classista']),
            ('LICENCA PARA QUALIFICACAO PROFISSIONAL', [r'resolve[\s\S]{0,350}licenca\s*para\s*qualificacao\s*profissional']),
            ('LICENCA PARA TRATAMENTO DE SAUDE EM PESSOA DA FAMILIA', [r'(resolve|conceder)[\s\S]{0,150}licenca\s*para\s*tratamento.{0,150}familia',
                                                                       r'conceder[\s\S]{0,150}em pessoa da familia']),
            ('LICENCA PARA TRATAMENTO DE SAUDE', [r'(resolve|concede)[\s\S]{0,150}para\s*tratamento.{2,5}saude',
                                                  r'(resolve|concede|(in)?deferir).{0,150}licenca medica',
                                                  r'atestado medico emitido pelo']),
            ('LICENCA PARA TRATAR DE INTERESSE PARTICULAR', [r'(in)?deferir.{0,150}?(licenca|afastamento).{0,20}?\s*para\s*trata(r|mento)\s*de\s*(interesse|assunto)s?\s*particular(es)?']),
            ('LICENCA POR ACIDENTE EM SERVICO', [r'resolve[\s\S]{0,150}licenca\s*por\s*acidente\s*em\s*servico']),
            ('LICENCA PREMIO', [r'(resolve|conceder?)[\s\S]{0,150}icenca\s*-?\s*premio',
                                r'conceder[\s\S]{0,150}lic[\s\S]{0,50}assidui',
                                r'conceder[\s\S]{0,150}premio[\s\S]{0,50}assidui',
                                r'conceder[\s\S]{0,150}assidui',
                                r'((in)?DEFERIR?|conceder?).{0,50}?Licenca Premio']),
            ('LICENCA POR FALECIMENTO', [r'conceder?[\s\S]{0,200}falecimento',]),
            ('LICENCA POR MOTIVO DE AFASTAMENTO DO CONJUGE', [r'(conceder|(in)?deferir).{0,250}LICENCA POR MOTIVO DE AFASTAMENTO DO CONJUGE']),
            ('LICENCA ESPECIAL', [r'conceder?[\s\S]{0,150}licenca especial']),
            ('LICENCA', [r'conceder?[\s\S]{0,150}?licenca']),
            ('LOTACAO', [r'r\s*e\s*s\s*[o0]\s*l.{2,20}lotar']),
            ('PROGRESSAO', [r'(resolve|conceder?).{0,150}?(progressao|ascencao)', r'lancamento das progressoes']),
            ('PROMOCAO', [r'resolve[\s\S]{0,50}promover']),
            ('REDISTRIBUICAO', [r'resolve[\s\S]{0,50}redistribuir']),
            ('REMOCAO', [r'resolve[\s\S]{0,50}remover']),
            ('REVERSAO', [r'reverter[\s\S]{0,50}servico\s*publico']),
            ('SALARIO-FAMILIA', [r'(conceder|deferido)[\s\S]{0,50}salario\s*familia']),
            ('DESIGNACAO DE FUNCAO', [r'designar [oa]? servidora?.{0,40}?funcao']),
            ('DESIGNACAO', [r'designar[\s\S]{0,80}servidor',
                            r'designar?.{0,200}(para|matricula)',
                            r'RESOLVE.{2,20}\n(designar.{0,150}?como responsaveis)',
                            r'designar.{0,50}para responder pelo cargo',
                            r'prorrogar a designacao',
                            r'r e s o l v e.{0,50}d e s i g n a r']),
            ('DELEGACAO', [r'delegar?.{0,80}servidor']),
            ('SUSPENSAO', [r'suspender[\s\S]{0,50}servidor',
                           r'r\s*e\s*s\s*o\s*l\s*v\s*e.{0,100}?suspender']),
            ('TRANSPOSICAO DE CARGO', [r'resolve[\s\S]{0,50}transpor\s']),
            ('TRANSFERENCIA', [r'resolve.{0,50}transferir', 'trans.eri.{0,5}[oa] servidor']),
            ('FERIAS', [r'conceder[\s\S]{0,150}ferias', r'escala de ferias']),            
            ('INCORPORACAO', [r'conceder[\s\S]{0,200}incorporacao de verba de representacao', r'conceder[\s\S]{0,200}incorporacao']),
            ('VANTAGENS FINANCEIRAS', [r'conceder[\s\S]{0,200}vantage(m|ns) financeiras?']),
            ('INCORPORACAO SALARIAL', [r'conceder[\s\S]{0,200}incorporacao salarial']),
            ('VACANCIA', [r'r e s o l v e[\s\S]{0,50}declarar a vacancia',
                          r'(\s(in)?deferir|conceder).{0,50}vacancia']),
            ('ESTABILIDADE', [r'fica declarado estavel no servico publico',
                              r'estavel no servico publico',
                              r'conceder[\s\S]{0,150}(estabilidade|declarar[\s\S]{0,100}estavel)',
                              r'(declarar|considerar) estave(l|is) no servico publico']),
            ('GRATIFICACAO ADICIONAL', [r'conceder.*?gratificacao']),
            ('ADICIONAL DE QUALIFICACAO', [r'(conceder|(in)?deferir).*adicional de qualificacao']),
            ('GRATIFICACAO REPRESENTACAO', [r'(concede|atribui).*gratificacao.{0,6}representacao']),
            ('ABONO DE PERMANENCIA', [r'(conceder|(in)?deferir).{1,50}?abono de permanencia']),
            ('REENQUADRAMENTO', [r'reenquadrar os? servidor(es)?', r'reenquadramento (para|na)', r'promocao para']),
            ('REENQUADRAMENTO', [r'reenquadrar os? servidor(es)?', r'reenquadramento (para|na)', r'promocao para']),
            ('RECONDUCAO', [r'reconduzir.{0,50}para']),
            ('ELEVACAO DE NIVEL', [r'\s(in)?deferir.{0,50}elevacao de nivel', r'concede mudanca de nivel', ]),
            ('RETORNO', [r'retornar.{1,100}[oa]s servidor',
                         r'fazer retornar as (suas)? atividades (normais)?',
                         r'retorno as atividades',
                         r'resolve.{2,20}? fazer retornar',
                         r'resolve.{2,30}?retornar']),
            ('APOSTILAMENTO', [r'\s(conceder|(in)?deferir|cancelar).{0,150}apostilamento']),
            ('NOMEAR INTERINAMENTE', [r'NOMEAR INTERINAMENTE']),
            ('READAPTACAO DE FUNCAO', [r'conceder Readaptacao de Funcao',
                                       r'readaptar em funcao',
                                       r'autorizar a? readaptacao de funcao',]),
            ('DEMISSAO', [r'resolve.{0,10}?(demissao|demitir)']),
            ('DESTITUIR', [r'resolve.{0,10}?(destituir)']),
            ('ELEVACAO DE CLASSE', [r'[\s-](in)?defer?ir.{0,50}?elevacao de classe?.{0,10}?servidor']),
            ('DEDICACAO EXCLUSIVA', [r'\s((in)?deferir|conceder).{0,50}?dedicacao exclusiva']),
            ('RESCISAO CONTRATRUAL', [r'\s(resolve).{0,50}?Rescindir o Contrato', 'rescindir a pedido']),
            ('CONTRATO TEMPORARIO', [r'C O N T R A T O (S E R V I D O R)? T E M P O R A R I O']),
            ('ELEVACAO FUNCIONAL', [r'conceder ascensao funcional']),
            ('RECLASSIFICAR', [r'reclassifica']),
            ('PROCESSO DISCIPLINAR', [r'(o|instauracao de|instaurar) processo administrativo disciplinar']),
            ('ADVERTENCIA DISCIPLINAR', [r'aplicar.{0,50}?advertencia disciplinar']),
            ('HORAS EXCEDENTES', [r'conceder horas excedentes']),
            ('AUXILIO DOENCA', [r'auxilio doenca aos servidores']),            
            ('HOMOLOGACAO DE ESTAGIO PROBATORIO', [r'avaliacao especial de desempenho de estagio probatorio dos servidores']),
            ('SALARIO FAMILIA', [r'concessao (do beneficio)? de salario[\s-]familia']),            
            ('DESIGNACAO PARA COMISSAO/CONSELHO/FISCAL/GRUPO', [
                r'ficam nomeados (como|os) membros.{0,70}?(conselho|junta)',
                r'ficam nomeados.{0,40}?para compor(em)? o conselho',
                r'fica criada e nomeada a comissao',
                r'instituir composicao atualizada da comissao permanente',
                r'servidores abaixo discriminados, como gestor, fiscal titular e fiscal suplente nos contratos',
                r'(nomear|constituir) comissao para',
                r'constituir comissao (disciplinar|de\s|composta|temporaria|permanente)',
                r'instituir a? comissao (destinada|permanente|temporaria)',
                r'(alterar|atualizar) a? composicao da comissao',
                r'constituir a subcomissao',
                r'dar posse aos conselheiros',
                r'criar a comissao organizadora',
                r'homologar a composicao do conselho',
                r'passa a? compor a comissao',
                r'aprovar a indicacao dos conselheiros.{0,40}?comissao'
                ]),
            ('RETIFICACAO', [r'(retificar|retifica\s)', r'(in)?deferir o? pedido de retificacao']),
        ])

        self.events_regex = {}

        for event in self.events.keys():
            self.events_regex[event] = []

            for regex in self.events[event]:
                self.events_regex[event].append(re.compile(regex, re.DOTALL | re.MULTILINE | re.IGNORECASE))

    def search(self, snippet):
        for event in self.events.keys():
            for keyword in self.events[event]:
                if keyword in snippet:
                    return event

            for regex in self.events_regex[event]:
                match = regex.search(snippet)
                if match is not None:
                    return event

        return None